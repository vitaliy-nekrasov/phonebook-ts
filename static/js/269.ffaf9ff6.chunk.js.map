{"version":3,"file":"static/js/269.ffaf9ff6.chunk.js","mappings":"2LAiBA,UAPuC,SAAH,GAAyC,IAAnCA,EAAS,EAATA,UAAU,EAAD,EAAEC,WAAAA,OAAU,MAAG,IAAG,EAC7DC,GAAaC,EAAAA,EAAAA,IAAgCC,EAAAA,IAC7CC,GAAeF,EAAAA,EAAAA,IAAgCG,EAAAA,IAErD,OADiCJ,IAAeG,GACxB,SAAC,KAAQ,CAACE,GAAIN,IAAiBD,CACzD,C","sources":["components/PrivateRoute/PrivateRoute.tsx"],"sourcesContent":["import { Navigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { selectIsLoggedIn, selectIsRefreshing } from \"../../redux/selectors\";\nimport { RootState } from \"../../redux/selectors\";\n\ninterface IProps {\n  component: JSX.Element;\n  redirectTo: string;\n}\n\nconst PrivateRoute: React.FC<IProps> = ({ component, redirectTo = \"/\" }) => {\n  const isLoggedIn = useSelector<RootState, boolean>(selectIsLoggedIn);\n  const isRefreshing = useSelector<RootState, boolean>(selectIsRefreshing);\n  const shouldRedirect: boolean = !isLoggedIn && !isRefreshing;\n  return shouldRedirect ? <Navigate to={redirectTo} /> : component;\n};\n\nexport default PrivateRoute;\n"],"names":["component","redirectTo","isLoggedIn","useSelector","selectIsLoggedIn","isRefreshing","selectIsRefreshing","to"],"sourceRoot":""}