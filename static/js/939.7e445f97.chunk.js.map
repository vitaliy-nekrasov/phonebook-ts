{"version":3,"file":"static/js/939.7e445f97.chunk.js","mappings":"+NAEaA,EAAOC,EAAAA,GAAAA,KAAW,2QAGnB,SAACC,GAAC,OAAKA,EAAEC,MAAMC,QAAQC,GAAG,IACnB,SAACH,GAAC,OAAKA,EAAEC,MAAMG,MAAM,EAAE,IACvB,SAACJ,GAAC,OAAKA,EAAEC,MAAMG,MAAM,EAAE,IAC/B,SAACJ,GAAC,OAAKA,EAAEC,MAAMG,MAAM,EAAE,IACrB,SAACJ,GAAC,OAAKA,EAAEC,MAAMG,MAAM,EAAE,IACd,SAACJ,GAAC,OAAKA,EAAEC,MAAMI,OAAOC,KAAK,IAKpCC,EAAQR,EAAAA,GAAAA,MAAY,wFAGlB,SAACC,GAAC,OAAKA,EAAEC,MAAMO,UAAUC,CAAC,IAE5BC,EAAQX,EAAAA,GAAAA,MAAY,6IACtB,SAACC,GAAC,OAAKA,EAAEC,MAAMG,MAAM,EAAE,IACf,SAACJ,GAAC,OAAKA,EAAEC,MAAMG,MAAM,EAAE,IAC9B,SAACJ,GAAC,OAAKA,EAAEC,MAAMC,QAAQS,MAAM,IACtB,SAACX,GAAC,OAAKA,EAAEC,MAAMG,MAAM,EAAE,IAC7B,SAACJ,GAAC,OAAKA,EAAEC,MAAMG,MAAM,EAAE,IAAI,SAACJ,GAAC,OAAKA,EAAEC,MAAMG,MAAM,EAAE,IAChD,SAACJ,GAAC,OAAKA,EAAEC,MAAMO,UAAUI,CAAC,IAE5BC,EAASd,EAAAA,GAAAA,OAAa,8ZAGxB,SAACC,GAAC,OAAKA,EAAEC,MAAMG,MAAM,EAAE,IAEjB,SAACJ,GAAC,OAAKA,EAAEC,MAAMG,MAAM,EAAE,IAC5B,SAACJ,GAAC,OAAKA,EAAEC,MAAMC,QAAQC,GAAG,IACnB,SAACH,GAAC,OAAKA,EAAEC,MAAMG,MAAM,EAAE,IAItB,SAACJ,GAAC,OAAKA,EAAEC,MAAMG,MAAM,EAAE,IAC1B,SAACJ,GAAC,OAAKA,EAAEC,MAAMa,YAAYC,QAAQ,IACzC,SAACf,GAAC,OAAKA,EAAEC,MAAMI,OAAOW,KAAK,IACtB,SAAChB,GAAC,OAAKA,EAAEC,MAAMI,OAAOC,KAAK,IAKzB,SAACN,GAAC,OAAKA,EAAEC,MAAMI,OAAOY,KAAK,I,6BC2B7C,EA1DsC,SAAH,GAA+B,IAAzBC,EAAO,EAAPA,QAASC,EAAQ,EAARA,SAChD,GAAqBC,EAAAA,EAAAA,MAAdC,GAAqC,YAA3B,GA8BjB,OACE,UAACvB,EAAI,CAACwB,aAAa,MAAMC,SA7BL,SAACC,GACrBA,EAAEC,iBACF,IAAMC,EAAa,CACjBC,KAAMH,EAAEI,OAAOD,KAAKE,MACpBC,OAAQN,EAAEI,OAAOG,MAAMF,OAEiBV,EAASa,MACjD,SAACC,GAAiB,OAChBA,EAAQN,KACLO,oBACAC,SAAST,EAAWC,KAAKO,oBAAoB,IAGlDE,EAAAA,OAAAA,QAAe,GAAD,OAAIV,EAAWC,KAAI,4BAA4B,CAC3DU,QAAS,IACTC,SAAU,WAGZjB,EAAWK,GACXU,EAAAA,OAAAA,QAAe,6BAA8B,CAC3CC,QAAS,IACTC,SAAU,WAGdd,EAAEI,OAAOW,QACTrB,GACF,EAGmD,WAC/C,UAACX,EAAK,WAAC,QAEL,SAACG,EAAK,CACJ8B,KAAK,OACLb,KAAK,OACLc,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,UAACpC,EAAK,WAAC,UAEL,SAACG,EAAK,CACJ8B,KAAK,MACLb,KAAK,QACLc,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,SAAC9B,EAAM,CAAC2B,KAAK,SAAQ,SAAC,mBAG5B,C","sources":["components/ContactForm/ContactForm.styled.tsx","components/ContactForm/ContactForm.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  border: ${(p) => p.theme.borders.fat};\n  border-radius: ${(p) => p.theme.space[3]};\n  margin-bottom: ${(p) => p.theme.space[4]};\n  width: ${(p) => p.theme.space[9]};\n  padding: ${(p) => p.theme.space[3]};\n  background-color: ${(p) => p.theme.colors.white};\n  @media screen and (max-width: 768px) {\n    width: calc(100% - 18px);\n  }\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: ${(p) => p.theme.fontSizes.m};\n`;\nexport const Input = styled.input`\n  width: ${(p) => p.theme.space[8]};\n  margin-bottom: ${(p) => p.theme.space[3]};\n  border: ${(p) => p.theme.borders.normal};\n  border-radius: ${(p) => p.theme.space[5]};\n  padding: ${(p) => p.theme.space[2]} ${(p) => p.theme.space[3]};\n  font-size: ${(p) => p.theme.fontSizes.s};\n`;\nexport const Button = styled.button`\n  text-decoration: none;\n  display: inline-block;\n  width: ${(p) => p.theme.space[7]};\n  height: 40px;\n  line-height: ${(p) => p.theme.space[4]};\n  border: ${(p) => p.theme.borders.fat};\n  border-radius: ${(p) => p.theme.space[5]};\n  font-size: 11px;\n  text-transform: uppercase;\n  text-align: center;\n  letter-spacing: ${(p) => p.theme.space[2]};\n  font-weight: ${(p) => p.theme.fontWeights.semiBold};\n  color: ${(p) => p.theme.colors.black};\n  background: ${(p) => p.theme.colors.white};\n  transition: 0.3s;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background: ${(p) => p.theme.colors.green};\n  }\n`;\n","import { Form, Label, Input, Button } from \"./ContactForm.styled\";\nimport { useAddContactMutation } from \"../../redux/contactSlice\";\nimport { Notify } from \"notiflix/build/notiflix-notify-aio\";\nimport { BaseSyntheticEvent } from \"react\";\n\ninterface IContact {\n  name: string;\n  number: string;\n  id: string;\n}\n\ninterface IProps {\n  onClose: Function;\n  contacts: IContact[];\n}\n\nconst ContactForm: React.FC<IProps> = ({ onClose, contacts }) => {\n  const [addContact] = useAddContactMutation();\n\n  const handlerSubmit = (e: BaseSyntheticEvent) => {\n    e.preventDefault();\n    const newContact = {\n      name: e.target.name.value,\n      number: e.target.phone.value,\n    };\n    const findContact: IContact | undefined = contacts.find(\n      (contact: IContact) =>\n        contact.name\n          .toLocaleLowerCase()\n          .includes(newContact.name.toLocaleLowerCase())\n    );\n    if (findContact) {\n      Notify.failure(`${newContact.name} is already in contacts.`, {\n        timeout: 3000,\n        distance: \"100px\",\n      });\n    } else {\n      addContact(newContact);\n      Notify.success(\"Add a new contact success!\", {\n        timeout: 3000,\n        distance: \"100px\",\n      });\n    }\n    e.target.reset();\n    onClose();\n  };\n\n  return (\n    <Form autoComplete=\"off\" onSubmit={handlerSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Save contact</Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n"],"names":["Form","styled","p","theme","borders","fat","space","colors","white","Label","fontSizes","m","Input","normal","s","Button","fontWeights","semiBold","black","green","onClose","contacts","useAddContactMutation","addContact","autoComplete","onSubmit","e","preventDefault","newContact","name","target","value","number","phone","find","contact","toLocaleLowerCase","includes","Notify","timeout","distance","reset","type","pattern","title","required"],"sourceRoot":""}