{"version":3,"file":"static/js/92.32846aec.chunk.js","mappings":"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","sources":["components/UpdateContactForm/UpdateContactForm.styled.tsx","components/UpdateContactForm/UpdateContactForm.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  border: ${(p) => p.theme.borders.fat};\n  border-radius: ${(p) => p.theme.space[3]};\n  margin-bottom: ${(p) => p.theme.space[4]};\n  width: ${(p) => p.theme.space[9]};\n  padding: ${(p) => p.theme.space[3]};\n  background-color: ${(p) => p.theme.colors.white};\n  @media screen and (max-width: 768px) {\n    width: calc(100% - 18px);\n  }\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: ${(p) => p.theme.fontSizes.m};\n`;\nexport const Input = styled.input`\n  width: ${(p) => p.theme.space[8]};\n  margin-bottom: ${(p) => p.theme.space[3]};\n  border: ${(p) => p.theme.borders.normal};\n  border-radius: ${(p) => p.theme.space[5]};\n  padding: ${(p) => p.theme.space[2]} ${(p) => p.theme.space[3]};\n  font-size: ${(p) => p.theme.fontSizes.s};\n`;\nexport const Button = styled.button`\n  text-decoration: none;\n  display: inline-block;\n  width: ${(p) => p.theme.space[7]};\n  height: 40px;\n  line-height: ${(p) => p.theme.space[4]};\n  border: ${(p) => p.theme.borders.fat};\n  border-radius: ${(p) => p.theme.space[5]};\n  font-size: 11px;\n  text-transform: uppercase;\n  text-align: center;\n  letter-spacing: ${(p) => p.theme.space[2]};\n  font-weight: ${(p) => p.theme.fontWeights.semiBold};\n  color: ${(p) => p.theme.colors.black};\n  background: ${(p) => p.theme.colors.white};\n  transition: 0.3s;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background: ${(p) => p.theme.colors.green};\n  }\n`;\n","import { Form, Label, Input, Button } from \"./UpdateContactForm.styled\";\nimport { useUpdateContactMutation } from \"../../redux/contactSlice\";\nimport { useState } from \"react\";\nimport { Notify } from \"notiflix/build/notiflix-notify-aio\";\n\ninterface IProps {\n  onClose: Function;\n  name: string;\n  number: string;\n  id: string;\n}\n\nconst UpdateContactForm: React.FC<IProps> = ({\n  onClose,\n  name,\n  number,\n  id,\n}): JSX.Element => {\n  const [updateContact] = useUpdateContactMutation();\n  const [nameValue, setNameValue] = useState<string>(name);\n  const [numberValue, setNumberValue] = useState<string>(number);\n\n  const handlerSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const contact = {\n      id,\n      contact: { name: nameValue, number: numberValue },\n    };\n    e.currentTarget.reset();\n    updateContact(contact);\n    Notify.success(\"Change contact success!\", {\n      timeout: 3000,\n      distance: \"100px\",\n    });\n    onClose();\n  };\n\n  return (\n    <Form autoComplete=\"off\" onSubmit={handlerSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={nameValue}\n          onChange={(e) => {\n            setNameValue(e.target.value);\n          }}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"phone\"\n          value={numberValue}\n          onChange={(e) => {\n            setNumberValue(e.target.value);\n          }}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Change contact</Button>\n    </Form>\n  );\n};\n\nexport default UpdateContactForm;\n"],"names":["Form","styled","p","theme","borders","fat","space","colors","white","Label","fontSizes","m","Input","normal","s","Button","fontWeights","semiBold","black","green","onClose","name","number","id","useUpdateContactMutation","updateContact","useState","nameValue","setNameValue","numberValue","setNumberValue","autoComplete","onSubmit","e","preventDefault","contact","currentTarget","reset","Notify","timeout","distance","type","value","onChange","target","pattern","title","required"],"sourceRoot":""}