{"version":3,"file":"static/js/824.0d1d77a1.chunk.js","mappings":"qNAEaA,EAAOC,EAAAA,GAAAA,KAAW,iPAGnB,SAACC,GAAC,OAAKA,EAAEC,MAAMC,QAAQC,GAAG,IACnB,SAACH,GAAC,OAAKA,EAAEC,MAAMG,MAAM,EAAE,IACvB,SAACJ,GAAC,OAAKA,EAAEC,MAAMG,MAAM,EAAE,IAC/B,SAACJ,GAAC,OAAKA,EAAEC,MAAMG,MAAM,EAAE,IACrB,SAACJ,GAAC,OAAKA,EAAEC,MAAMG,MAAM,EAAE,IAKvBC,EAAQN,EAAAA,GAAAA,MAAY,wFAGlB,SAACC,GAAC,OAAKA,EAAEC,MAAMK,UAAUC,CAAC,IAE5BC,EAAQT,EAAAA,GAAAA,MAAY,6IACtB,SAACC,GAAC,OAAKA,EAAEC,MAAMG,MAAM,EAAE,IACf,SAACJ,GAAC,OAAKA,EAAEC,MAAMG,MAAM,EAAE,IAC9B,SAACJ,GAAC,OAAKA,EAAEC,MAAMC,QAAQO,MAAM,IACtB,SAACT,GAAC,OAAKA,EAAEC,MAAMG,MAAM,EAAE,IAC7B,SAACJ,GAAC,OAAKA,EAAEC,MAAMG,MAAM,EAAE,IAAI,SAACJ,GAAC,OAAKA,EAAEC,MAAMG,MAAM,EAAE,IAChD,SAACJ,GAAC,OAAKA,EAAEC,MAAMK,UAAUI,CAAC,IAE5BC,EAASZ,EAAAA,GAAAA,OAAa,8ZAGxB,SAACC,GAAC,OAAKA,EAAEC,MAAMG,MAAM,EAAE,IAEjB,SAACJ,GAAC,OAAKA,EAAEC,MAAMG,MAAM,EAAE,IAC5B,SAACJ,GAAC,OAAKA,EAAEC,MAAMC,QAAQC,GAAG,IACnB,SAACH,GAAC,OAAKA,EAAEC,MAAMG,MAAM,EAAE,IAItB,SAACJ,GAAC,OAAKA,EAAEC,MAAMG,MAAM,EAAE,IAC1B,SAACJ,GAAC,OAAKA,EAAEC,MAAMW,YAAYC,QAAQ,IACzC,SAACb,GAAC,OAAKA,EAAEC,MAAMa,OAAOC,KAAK,IACtB,SAACf,GAAC,OAAKA,EAAEC,MAAMa,OAAOE,KAAK,IAKzB,SAAChB,GAAC,OAAKA,EAAEC,MAAMa,OAAOG,KAAK,I,uCCH7C,EAjCwB,WACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,QAAyB,MACtCC,GAAgBD,EAAAA,EAAAA,QAAyB,MAa/C,OACE,2BACE,UAACvB,EAAI,CAACyB,aAAa,MAAMC,SAbR,SAACC,GAAyC,IAAD,IAC5DA,EAAEC,iBAEF,IAAMC,EAAa,CACjBC,MAAyB,QAApB,EAAER,EAAWS,eAAO,aAAlB,EAAoBC,MAC3BC,SAA+B,QAAvB,EAAET,EAAcO,eAAO,aAArB,EAAuBC,OAEnCZ,EAASc,EAAAA,EAAAA,MAAqBL,IAC9BF,EAAEQ,cAAcC,OAClB,EAIoD,WAC9C,UAAC7B,EAAK,WAAC,UAEL,SAACG,EAAK,CAAC2B,KAAK,QAAQC,KAAK,QAAQC,IAAKjB,QAExC,UAACf,EAAK,WAAC,YAEL,SAACG,EAAK,CAAC2B,KAAK,WAAWC,KAAK,WAAWC,IAAKf,QAE9C,SAACX,EAAM,CAACwB,KAAK,SAAQ,SAAC,eAI9B,C","sources":["pages/LogIn/LogIn.styled.tsx","pages/LogIn/LogIn.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  border: ${(p) => p.theme.borders.fat};\n  border-radius: ${(p) => p.theme.space[3]};\n  margin-bottom: ${(p) => p.theme.space[4]};\n  width: ${(p) => p.theme.space[9]};\n  padding: ${(p) => p.theme.space[3]};\n  @media screen and (max-width: 768px) {\n    width: calc(100% - 18px);\n  }\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: ${(p) => p.theme.fontSizes.m};\n`;\nexport const Input = styled.input`\n  width: ${(p) => p.theme.space[8]};\n  margin-bottom: ${(p) => p.theme.space[3]};\n  border: ${(p) => p.theme.borders.normal};\n  border-radius: ${(p) => p.theme.space[5]};\n  padding: ${(p) => p.theme.space[2]} ${(p) => p.theme.space[3]};\n  font-size: ${(p) => p.theme.fontSizes.s};\n`;\nexport const Button = styled.button`\n  text-decoration: none;\n  display: inline-block;\n  width: ${(p) => p.theme.space[7]};\n  height: 40px;\n  line-height: ${(p) => p.theme.space[4]};\n  border: ${(p) => p.theme.borders.fat};\n  border-radius: ${(p) => p.theme.space[5]};\n  font-size: 14px;\n  text-transform: uppercase;\n  text-align: center;\n  letter-spacing: ${(p) => p.theme.space[2]};\n  font-weight: ${(p) => p.theme.fontWeights.semiBold};\n  color: ${(p) => p.theme.colors.black};\n  background: ${(p) => p.theme.colors.white};\n  transition: 0.3s;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background: ${(p) => p.theme.colors.green};\n  }\n`;\n","import { Form, Label, Input, Button } from \"./LogIn.styled\";\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"../../redux/auth/authOperations\";\nimport { useRef } from \"react\";\n\ntype User = {\n  email: string;\n  password: string;\n};\n\nconst LogIn: React.FC = (): JSX.Element => {\n  const dispatch = useDispatch<any>();\n  const emailInput = useRef<HTMLInputElement>(null);\n  const passwordInput = useRef<HTMLInputElement>(null);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const user: User = {\n      email: emailInput.current?.value!,\n      password: passwordInput.current?.value!,\n    };\n    dispatch(authOperations.logIn(user));\n    e.currentTarget.reset();\n  };\n\n  return (\n    <main>\n      <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Label>\n          E-Mail\n          <Input type=\"email\" name=\"email\" ref={emailInput} />\n        </Label>\n        <Label>\n          Password\n          <Input type=\"password\" name=\"password\" ref={passwordInput} />\n        </Label>\n        <Button type=\"submit\">Log In</Button>\n      </Form>\n    </main>\n  );\n};\n\nexport default LogIn;\n"],"names":["Form","styled","p","theme","borders","fat","space","Label","fontSizes","m","Input","normal","s","Button","fontWeights","semiBold","colors","black","white","green","dispatch","useDispatch","emailInput","useRef","passwordInput","autoComplete","onSubmit","e","preventDefault","user","email","current","value","password","authOperations","currentTarget","reset","type","name","ref"],"sourceRoot":""}